package nsu.mikhalev.cryptographer;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import org.junit.jupiter.params.provider.ValueSource;

@DisplayName("–¢–µ—Å—Ç—ã –ø–æ—Ç–æ—á–Ω–æ–≥–æ —à–∏—Ñ—Ä–∞ –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è/—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏")
class StreamCipherTest {

    @ParameterizedTest
    @CsvSource({
        "'Hello, World!', 42",
        "'1234567890!@#$%^&*()', 15",
        "'–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä! üåç', 99"
    })
    @DisplayName("–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Å—Ç—Ä–æ–∫–∏")
    void testEncryptDecrypt(String message, int seed) {
        int[] encrypted = StreamCipher.encrypt(message, seed);

        Assertions.assertEquals(message.length(), encrypted.length, "–î–ª–∏–Ω–∞ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º");

        String decrypted = StreamCipher.decrypt(encrypted, seed);
        Assertions.assertEquals(message, decrypted, "–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º");
    }

    @ParameterizedTest
    @DisplayName("–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏")
    @ValueSource(ints = {0, 42, 99})
    void testEmptyMessage(int seed) {
        String message = "";

        int[] encrypted = StreamCipher.encrypt(message, seed);
        Assertions.assertNotNull(encrypted, "–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å null");
        Assertions.assertEquals(0, encrypted.length, "–î–ª–∏–Ω–∞ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 0 –¥–ª—è –ø—É—Å—Ç–æ–≥–æ –≤—Ö–æ–¥–∞");

        String decrypted = StreamCipher.decrypt(encrypted, seed);
        Assertions.assertEquals(message, decrypted, "–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º");
    }

    @ParameterizedTest
    @CsvSource({
        "'~!@#$%^&*()_+-=[]{}|;', 12",
        "'\\t\\n\\r\\f\\b', 7"
    })
    @DisplayName("–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤")
    void testSpecialCharacters(String message, int seed) {
        int[] encrypted = StreamCipher.encrypt(message, seed);
        Assertions.assertEquals(message.length(), encrypted.length, "–î–ª–∏–Ω–∞ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º");

        String decrypted = StreamCipher.decrypt(encrypted, seed);
        Assertions.assertEquals(message, decrypted, "–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º");
    }
}
